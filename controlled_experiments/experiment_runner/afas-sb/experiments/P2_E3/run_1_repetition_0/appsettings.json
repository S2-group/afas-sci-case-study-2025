{
  "hostSettings": {
    "devMode": true,
    "showExceptionDetails": true,
    "hostInfo": {
      "hostListeningAddresses": [
        "http://145.108.225.30:11119"
      ],
      "tenantListeningAddresses": [
        "http://145.108.225.30:11112"
      ],
      "fixedTenantKey": "AfasNext",
      "localCacheFolder": "c:\\anta\\sb\\hostcache",
      "frameworkVersion": "asd"
    },
    "streamRepository": {
      "useAggregateCache": true,
      "useProcessManagerCache": true
    },
    "diagnostics": {
      "enableTracing": true,
      "consoleLogging": true,
      "collectorEndpoint": "http://145.108.225.30:8201"
    },
    "security": {
      "hostEncryptionCertificate#json": {
        "certificateBase64": "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"
      }
    }
  },
  "devSettings": {
    "diagnostics": {
      "traceToOutput": true
    }
  },
  "cqrsConfig#json": {
    "hostName": "Host",
    "packageDefinitionsProviderFactory": {
      "type": "Afas.Cqrs.Dynamic.Provider.FilePackageDefinitionsProviderFactory, Afas.Cqrs"
    },
    "typeProvider": {
      "type": "Afas.Runtime.RuntimeTypeProvider, Afas.Runtime"
    },
    "tenantManager": {
      "type": "Afas.Host.Runtime.Services.FocusTenantManager, Afas.Host.Runtime"
    },
    "dynamicCommandHandler": {
      "type": "Afas.Cqrs.ServiceBus.DynamicCommandHandler, Afas.Cqrs"
    },
    "frameworkFileResolver": {
      "type": "Afas.Cqrs.Storage.FileSystemResolver, Afas.Cqrs",
      "parameters": [
        {
          "resourcePath": "C:/anta/sb/frontend"
        }
      ]
    },
    "settingsService": {
      "type": "Afas.Host.Runtime.DevMode.FileSettingsService, Afas.Host.Runtime",
      "parameters": [
        {
          "hostSettingsFile": "C:/anta/sb/hostsettings.json"
        }
      ]
    },
    "requestContextResolver": {
      "type": "Afas.Host.Runtime.Services.OwnOrganizationRequestContextResolverService, Afas.Host.Runtime"
    },
    "featureToggleResolver": {
      "type": "Afas.Host.Runtime.Services.FeatureToggleResolverService, Afas.Host.Runtime"
    },
    "notificationDispatcher": {
      "type": "Afas.Cqrs.TestNotificationDispatcher, Afas.Cqrs"
    },
    "subjectCommunicationManager": {
      "type": "Afas.Cqrs.TestSubjectCommunicationManager, Afas.Cqrs"
    },
    "monitorFactory": {
      "type": "Afas.Host.Runtime.Monitor.RuntimeMonitorFactory, Afas.Host.Runtime"
    },
    "applicationBackgroundTasks": [
      {
        "type": "Afas.Host.Runtime.LicenseSync.LicenseSyncBackgroundTask, Afas.Host.Runtime",
        "parameters": [
          {
            "intervalInHours": 12
          }
        ]
      }
    ],
    "services": [
      {
        "serviceType": "Afas.Runtime.Services.CounterService, Afas.Runtime.Common",
        "type": "Afas.Host.Runtime.Services.EventSourcedCounterService, Afas.Host.Runtime"
      },
      {
        "serviceType": "Afas.Runtime.Services.ReportGeneratorService, Afas.Runtime.Common",
        "type": "Afas.Host.Runtime.Services.DefaultReportGeneratorService, Afas.Host.Runtime"
      },
      {
        "serviceType": "Afas.Runtime.Services.BrandingService, Afas.Runtime.Common",
        "type": "Afas.Host.Runtime.Services.QueryBrandingService, Afas.Host.Runtime"
      },
      {
        "serviceType": "Afas.Runtime.Services.DataValidationService, Afas.Runtime.Common",
        "type": "Afas.Host.Runtime.Services.AggregateRootDataValidationService, Afas.Host.Runtime"
      },
      {
        "serviceType": "Afas.Runtime.Common.EnvironmentSettings.IEnvironmentSettingsService, Afas.Runtime.Common",
        "type": "Afas.Host.Runtime.EnvironmentSettings.EnvironmentSettingsService, Afas.Host.Runtime"
      },
      {
        "serviceType": "Afas.Runtime.Services.JsonSchemaLicenseRegistrationService, Afas.Runtime",
        "type": "Afas.Runtime.Services.NewtonsoftJsonSchemaLicenseRegistrationService, Afas.Runtime"
      },
      {
        "serviceType": "Afas.Runtime.Services.UserResolverService, Afas.Runtime.Common",
        "type": "Afas.Host.Runtime.Services.QueryRepositoryUserResolverService, Afas.Host.Runtime"
      },
      {
        "serviceType": "Afas.Host.Runtime.Communication.ICommunicationProfileResolver, Afas.Host.Runtime",
        "type": "Afas.Host.Runtime.Communication.RuntimeCommunicationProfileResolver, Afas.Host.Runtime"
      },
      {
        "serviceType": "Afas.Runtime.Command.Extensions.ExtensionValidationService, Afas.Runtime.Command",
        "type": "Afas.Runtime.Command.Extensions.BusinessActivityExtensionValidationService, Afas.Runtime.Command"
      },
      {
        "serviceType": "Afas.Runtime.Command.Extensions.ExtensionCorrectionService, Afas.Runtime.Command",
        "type": "Afas.Runtime.Command.Extensions.BusinessActivityExtensionCorrectionService, Afas.Runtime.Command"
      },
      {
        "serviceType": "Afas.Runtime.Command.Extensions.RepeatDateFieldsService, Afas.Runtime.Command",
        "type": "Afas.Runtime.Command.Extensions.BusinessActivityExtensionRepeatDateFieldsService, Afas.Runtime.Command"
      },
      {
        "serviceType": "Afas.Runtime.Services.DefinitionBackupService, Afas.Runtime",
        "type": "Afas.Runtime.Services.VersionedDefinitionBackupService, Afas.Runtime"
      },
      {
        "serviceType": "Afas.Runtime.Common.GenericSettings.IGenericSettingsService, Afas.Runtime.Common",
        "type": "Afas.Runtime.Common.GenericSettings.GenericSettingsService, Afas.Runtime.Common"
      },
      {
        "serviceType": "Afas.Host.Runtime.TenantDefinitions.ITenantDefinitionIndexService, Afas.Host.Runtime",
        "type": "Afas.Host.Runtime.TenantDefinitions.InMemoryTenantDefinitionIndexService, Afas.Host.Runtime"
      },
      {
        "serviceType": "Afas.Runtime.Communication.IKvkApiService, Afas.Runtime.Common",
        "type": "Afas.Host.Runtime.CommunicationProfiles.KvkApiService, Afas.Host.Runtime"
      },
      {
        "serviceType": "Afas.Runtime.Services.ScopeSettingsService, Afas.Runtime.Common",
        "type": "Afas.Host.Runtime.Services.QueryRepositoryScopeSettingsService, Afas.Host.Runtime"
      },
      {
        "serviceType": "Afas.Cqrs.Services.IDeviceInvitationService, Afas.Cqrs",
        "type": "Afas.Host.Runtime.Authorization.DeviceInvitationService, Afas.Host.Runtime"
      },
      {
        "serviceType": "Afas.Cqrs.Services.IAppClientService, Afas.Cqrs",
        "type": "Afas.Host.Runtime.Authorization.AppClientService, Afas.Host.Runtime"
      }
    ],
    "hostBasePath": "C:\\ANTA\\sb",
    "hostMetadataPath": "C:/anta/sb/HostPackage",
    "hostTenantMetadataPath": "C:\\ANTA\\sb\\t",
    "cacheService": {
      "type": "Afas.Cqrs.NoCacheService, Afas.Cqrs"
    },
    "commandBus": {
      "type": "Afas.Cqrs.ServiceBus.InMemory.InMemoryCommandBus, Afas.Cqrs",
      "commandBusModules": [
        {
          "type": "Afas.Cqrs.ServiceBus.DynamicObjectTypeCheckerCommandBusModule,  Afas.Cqrs"
        }
      ]
    },
    "queryBus": {
      "type": "Afas.Cqrs.ServiceBus.InMemory.InMemoryQueryBus, Afas.Cqrs",
      "queryBusModules": [
        {
          "type": "Afas.Cqrs.ServiceBus.DynamicObjectTypeCheckerQueryBusModule,  Afas.Cqrs"
        }
      ]
    },
    "eventNotifier": {
      "type": "Afas.Cqrs.AsyncInMemoryStreamSubscriptionEventNotifier, Afas.Cqrs"
    },
    "eventProcessor": {
      "type": "Afas.Cqrs.AsyncEventProcessor, Afas.Cqrs"
    },
    "parallelEventProcessor": {
      "type": "Afas.Cqrs.AsyncParallelEventProcessor, Afas.Cqrs"
    },
    "eventManager": {
      "type": "Afas.Cqrs.StreamSubscriptionEventManager, Afas.Cqrs",
      "eventStreamReader": {
        "type": "Afas.Cqrs.CachedEventStreamReader, Afas.Cqrs",
        "parameters": [
          {
            "maxCachedItems": 20000
          },
          {
            "expirationInSeconds": 60
          }
        ]
      },
      "eventProcessorTimer": {
        "type": "Afas.Cqrs.DefaultEventProcessorTimer, Afas.Cqrs"
      }
    },
    "eventSequencer": {
      "type": "Afas.Cqrs.DefaultEventSequencer, Afas.Cqrs"
    },
    "hostStorage": {
      "type": "Afas.Cqrs.Storage.MSSql.MSSqlHostStorage, Afas.Cqrs.MSSql",
      "parameters": [
        {
          "connectionString": "Server=\"localhost\";Encrypt=false;Database=\"f_afasnext_main\";User Id=\"sa\";Password=\"YourStrongPassword123!\";"
        }
      ]
    }
  },
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft": "Warning",
      "Microsoft.Hosting.Lifetime": "Warning"
    },
    "Debug": {
      "LogLevel": {
        "Default": "Information"
      }
    },
    "Console": {
      "IncludeScopes": true,
      "LogLevel": {
        "Microsoft.AspNetCore.Mvc.Razor.Internal": "Warning",
        "Microsoft.AspNetCore.Mvc.Razor.Razor": "Debug",
        "Microsoft.AspNetCore.Mvc.Razor": "Error",
        "Default": "Information"
      }
    },
    "EventSource": {
      "LogLevel": {
        "Microsoft": "Information"
      }
    },
    "EventLog": {
      "LogLevel": {
        "Microsoft": "Information"
      }
    }
  }
}
